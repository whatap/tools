apiVersion: v1
kind: ConfigMap
metadata:
  name: whatap-config
data:
  whatap.ini: |-
    extension=whatap.so
    whatap.license=x4b4a20un8hmp-x25ajofcmkjhbm-x446hb52788kk
    whatap.server.host=13.124.11.223/13.209.172.35
    whatap.shm_enabled=false
    profile_sql_param_enabled=true
    profile_basetime=0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: whatap-start-script
data:
  entrypoint.sh: |-
    #!/usr/bin/env bash

    export AGENT_APP_TYPE=4
    export WHATAP_VERSION=0.7.0.20200219
    export WHATAP_HOME=/usr/whatap/php
    export WHATAP_CONFIG_HOME=/usr/local/etc/php/conf.d
    export WHATAP_CONFIG=whatap.ini
    export WHATAP_APP_TYPE=${AGENT_APP_TYPE}
    export WHATAP_PHP_EXT_HOME=/usr/local/lib/php/extensions/no-debug-non-zts-20131226
    export WHATAP_PHP_EXT_SRC=/usr/whatap/php/modules/x64/whatap_20131106.so
    export WHATAP_PHP_BIN=/usr/local/bin/php

    ls -l /usr/whatap/php/whatap_php
    /usr/whatap/php/whatap_php -t=4 
    echo "step -1"
    ls -l /usr/local/etc/php/conf.d/ 
    echo "step -2"
    cat /usr/local/etc/php/conf.d/whatap.ini
    echo "execution failed"
    sleep 364d
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: frontend
  labels:
    app: guestbook
spec:
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  replicas: 3
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      initContainers:
      - name: copy
        image: registry.whatap.io:5000/whatap_dev:117
        command: ["/bin/sh", "-c", "cp /usr/whatap/php/modules/x64/whatap_20131106.so /whatap_lib/"]
        volumeMounts:
        - name: whatap-lib-volume
          mountPath: /whatap_lib/
      containers:
      - name: php-redis
        image: gcr.io/google-samples/gb-frontend:v4
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 80
        volumeMounts:
        - name: whatap-lib-volume
          mountPath: /usr/local/lib/php/extensions/no-debug-non-zts-20131226/whatap.so
          subPath: whatap_20131106.so
        - name: whatap-config-volume
          mountPath: /usr/local/etc/php/conf.d/whatap.ini
          subPath: whatap.ini
      - name: whatap-php
        image: registry.whatap.io:5000/whatap_dev:117
        command: ['/bin/entrypoint.sh']
        env:
          - name: NODE_IP
            valueFrom: {fieldRef: {fieldPath: status.hostIP}}
          - name: NODE_NAME
            valueFrom: {fieldRef: {fieldPath: spec.nodeName}}
          - name: POD_NAME
            valueFrom: {fieldRef: {fieldPath: metadata.name}}
        volumeMounts:  
          - name: whatap-script-volume
            mountPath: /bin/entrypoint.sh
            readOnly: true
            subPath: entrypoint.sh
          - name: whatap-config-volume
            mountPath: /usr/local/etc/php/conf.d/whatap.ini
            subPath: whatap.ini
      volumes:
        - name: whatap-script-volume
          configMap:
            defaultMode: 0700
            name: whatap-start-script
        - name: whatap-config-volume
          configMap:
            defaultMode: 0700
            name: whatap-config
        - name: whatap-lib-volume
          emptyDir: {}
