apiVersion: v1
kind: ServiceAccount
metadata:
  name: whatap
  namespace: whatap-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: whatap
  namespace: whatap-monitoring
rules:
  - apiGroups: ["*"]
    resources: ["namespaces", "pods", "pods/log", "configmaps","services", "endpoints","daemonsets","ingresses","deployments","nodes","persistentvolumes","persistentvolumeclaims", "events", "replicasets", "roles", "rolebindings", "clusterroles", "clusterrolebindings", "jobs", "cronjobs", "statefulsets", "serviceaccounts", "configmaps", "storageclasses" ]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: focus-start-script
  namespace: whatap-monitoring
data:
  entrypoint.sh: |-
    #!/usr/bin/env bash
    WHATAP_CATEGORY=
    WHATAP_LICENSE=
    WHATAP_PCODE=
    WHATAP_HOST=
    WHATAP_NAMESPACE=
    TARGET_POD=
    TARGET_CONTAINER=

    /data/agent/focus -license $WHATAP_LICENSE \
     -pcode $WHATAP_PCODE -server.host $WHATAP_HOST \
     -pod $TARGET_POD \
     -container $TARGET_CONTAINER \
     -namespace $TARGET_NAMESPACE \
     -json.decode \
     -category $WHATAP_CATEGORY
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: whatap
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: whatap
subjects:
  - kind: ServiceAccount
    name: whatap
    namespace: whatap-monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whatap-focus1
  namespace: whatap-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      name: whatap-focus1
  template:
    metadata:
      labels:
        name: whatap-focus1
    spec:
      containers:
        - name: whatap-focus1
          image: whatap/kube_mon
          imagePullPolicy: Always
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 150Mi
              cpu: 200m
          ports:
            - containerPort: 6600
          command: ['/bin/entrypoint.sh']
          volumeMounts:
            - name: start-script-volume
              mountPath: /bin/entrypoint.sh
              readOnly: true
              subPath: entrypoint.sh
      volumes:
        - name: start-script-volume
          configMap:
            defaultMode: 0700
            name: focus-start-script

      serviceAccount: whatap

